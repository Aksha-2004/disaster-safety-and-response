name: Build Flutter APK

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Patch flutter_sms & nearby_connections
        run: |
          echo "Patching flutter_sms..."
          for dir in $HOME/.pub-cache/hosted/pub.dev/flutter_sms-*; do
            gradle_file="$dir/android/build.gradle"
            if [ -f "$gradle_file" ]; then
              echo " - Patching $gradle_file"
              sed -i '/^android {/a \    namespace "com.example.flutter_sms"' "$gradle_file"
              sed -i 's/org.jetbrains.kotlin:kotlin-gradle-plugin:[0-9.]\+/org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10/g' "$gradle_file"
            fi

            props_file="$dir/android/gradle.properties"
            if [ -f "$props_file" ]; then
              echo "kotlin.code.style=official" >> "$props_file"
              echo "kotlin.version=1.8.10" >> "$props_file"
            fi
          done

          echo "Patching nearby_connections..."
          for dir in $HOME/.pub-cache/hosted/pub.dev/nearby_connections-*; do
            gradle_file="$dir/android/build.gradle"
            if [ -f "$gradle_file" ]; then
              echo " - Patching $gradle_file"
              sed -i '/^android {/a \    namespace "com.example.nearby_connections"' "$gradle_file"
            fi
          done

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk


